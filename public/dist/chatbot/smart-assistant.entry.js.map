{"file":"smart-assistant.entry.esm.js","mappings":"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","names":[],"sources":["src/config.js","src/components/smart-assistant/smart-assistant.css?tag=smart-assistant&encapsulation=shadow","src/components/smart-assistant/smart-assistant.tsx"],"sourcesContent":["export const Config = {\r\n  responseUrl: 'http://localhost:5000/get_response',\r\n  feedbackUrl:'http://localhost:5000/save_feedback',\r\n  tokenUrl:'http://localhost:5000/get_token',\r\n \r\n  getFileUrl:'http://localhost:5000/open_file',\r\n \r\n  chatSecretKey:'7c7a412d-2057-4fdb-824c-fe4f780a6147',\r\n \r\n\r\n\r\n  headerLogo: 'assets/images/simba_bot.png',\r\n  headerText: 'Smart Assistant',\r\n  headerBgColor: '#FFFFFF',\r\n  userLogo: 'assets/images/simba_user.png',\r\n  botLogo: 'assets/images/simba_bot.png',\r\n  userMsgBgColor: \"#F3F3F7\",\r\n  botBgColor: '#f6f6e3',\r\n  innerBoxColor: '#ffffff',\r\n  sendBgColor: '#ffffff',\r\n  headerTextColor: '#0a2367',\r\n  botTextColor:  \"#000E1A\",\r\n  userMsgColor: \"#000E1A\",\r\n\r\n  \r\n  feedbackColor: 'black',\r\n\r\n  refinedQueryColor:'black',\r\n  sourceColor: 'black',\r\n\r\n  sendSymbolColor: '#6e6767',\r\n\r\n  showSource: true ,\r\n  showRefinedQuery: true,\r\n  showFeedback: true,\r\n  \r\n  \r\n\r\n \r\n \r\n  chatIcon:'far fa-comment',\r\n  chatIconBg: '#fefcfc',\r\n  chatIconColor: '#0a2367',\r\n  closeIconColor: '#0a2367',\r\n  botText: 'Hi, How may I assist you today ?',\r\n \r\n \r\n \r\n \r\n \r\n \r\n\r\n \r\n \r\n\r\n \r\n\r\n \r\n   \r\n \r\n   \r\n};","@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\");\r\n\r\n\r\n.body {\r\n  font-family: 'LightCn', sans-serif;\r\n}\r\n \r\nh1, h2, h3, h4, h5, h6 {\r\n  font-family: 'YourFont-Bold', sans-serif;\r\n}\r\n \r\n@media only screen and (max-width: 400px) {\r\n\r\n  .circular-icon {\r\n    border-radius: 50%;\r\n    padding: 10px; /* Adjust this value as needed for the desired size */\r\n    transition: background-color 0.3s ease;\r\n  }\r\n \r\n  .chat-icon {\r\n    position: fixed;\r\n    bottom: 2vh; /* Adjust this value to position it vertically */\r\n    right: 2vw; /* Adjust this value to position it horizontally */\r\n     /* Set height to 48px for the image */\r\n    border-radius: 50%; /* Make it circular */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n \r\n   \r\n  .down-icon{\r\n    position: fixed;\r\n    height: 4vh;\r\n    width: 8vw;\r\n    background-color: #e80c31;\r\n    border-radius: 30px;\r\n    bottom: 31.5vh;\r\n    color:white;\r\n    font-size:2vh;\r\n    right: 5%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n \r\n \r\n  .inner-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 94vw;\r\n    /* height:600px; */\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n    margin-left: 0;\r\n    margin-top: 0;\r\n  \r\n    /* margin: 20px auto;  */\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n \r\n  .chatbot-header{\r\n\r\n    height:3.5vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1.4vh;\r\n    font-weight: bold;\r\n   \r\n  }\r\n \r\n  .header-content{\r\n    display: flex;\r\n    align-items: center;\r\n   \r\n  }\r\n \r\n  .bot-logo{\r\n    height: 40px;\r\n     width: 40px;\r\n    margin-right: 10px;\r\n    border-radius: 50% ;\r\n  }\r\n \r\n  .bot-name{\r\n    margin-left: 60px;\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    font-size: 16px;\r\n  }\r\n  .close-icon{\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    margin-right: 10px;\r\n    display: flex;\r\n  }\r\n \r\n  .App {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 42vh;\r\n    padding: 1vw;\r\n  }\r\n \r\n  .chat-container {\r\n    flex-grow: 1;\r\n    overflow: auto; /* Enable automatic scrolling */\r\n    height: 100px\r\n  }\r\n\r\n  \r\n /* Hide the scrollbar track */\r\n .chat-container::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar width and color */\r\n.chat-container::-webkit-scrollbar {\r\n  width: 8px; /* Adjust as needed */\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar thumb appearance */\r\n.chat-container::-webkit-scrollbar-thumb {\r\n  background-color: transparent;\r\n  border-radius: 4px; /* Rounded corners */\r\n}\r\n/* Define scrollbar thumb on hover appearance */\r\n.chat-container::-webkit-scrollbar-thumb:hover {\r\n  background-color: rgba(0, 0, 0, 0.3); /* Adjust opacity as needed */\r\n}\r\n \r\n  .message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 5px;\r\n    align-items: baseline;\r\n \r\n  }\r\n \r\n  .bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n    /* border-radius: 50% ; */\r\n  }\r\n \r\n  .user-message {\r\n   \r\n    align-self: flex-end;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n \r\n  .bot-message {\r\n   \r\n    \r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n    word-wrap: break-word;\r\n    max-width: 360px;\r\n    white-space: pre-line;\r\n  }\r\n \r\n  .feedback-icon{\r\n    display: flex;\r\n    gap: 15px;\r\n  }\r\n  /* icon.css */\r\n  .thumbs-up-icon ,.thumbs-down-icon{\r\n    \r\n    transform: scale(1.1);\r\n    transition: transform 0.3s;\r\n  }\r\n \r\n  .default-icon {\r\n  \r\n    transform: scale(1);\r\n  }\r\n \r\n  .refined-query {\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    color: #888;\r\n    align-self: flex-end;\r\n  }\r\n \r\n  .input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1.5vh;\r\n    height:3vh;\r\n    gap:5px;\r\n    border-top: 2px solid #ccc;\r\n  }\r\n \r\n \r\n  input[type=\"text\"] {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n \r\n  .user-icon {\r\n    margin: 2px 6px;\r\n    align-self: flex-end;\r\n    \r\n  }\r\n  .user-bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n  }\r\n  .empty-input {\r\n    border: 1px solid #e80c31;\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Additional style for the \"Enter Valid Query\" placeholder */\r\n  .empty-input::placeholder {\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Add this CSS in your stylesheets */\r\n  .chatbot-overlay {\r\n    position: fixed;\r\n    right: 3%;\r\n    bottom:  36%;\r\n    background-color: white;\r\n    z-index: 999;\r\n   \r\n  }\r\n \r\n  .send-icon{\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n \r\n  }\r\n}\r\n \r\n@media only screen and (min-width: 400px) and (max-width: 600px) {\r\n\r\n  .circular-icon {\r\n    border-radius: 50%;\r\n    padding: 10px; /* Adjust this value as needed for the desired size */\r\n    transition: background-color 0.3s ease;\r\n  }\r\n \r\n  .chat-icon {\r\n    position: fixed;\r\n    bottom: 2vh; /* Adjust this value to position it vertically */\r\n    right: 2vw; /* Adjust this value to position it horizontally */\r\n     /* Set height to 48px for the image */\r\n    border-radius: 50%; /* Make it circular */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n \r\n   \r\n  .down-icon{\r\n    position: fixed;\r\n    height: 5vh;\r\n    width: 10vw;\r\n    background-color: #e80c31;\r\n    border-radius: 30px;\r\n    bottom: 37vh;\r\n    color:white;\r\n    font-size:3vh;\r\n    right: 4%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n \r\n \r\n  .inner-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 94vw;\r\n    /* height:600px; */\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n    margin-left: 0;\r\n    margin-top: 0;\r\n  \r\n    /* margin: 20px auto;  */\r\n  }\r\n \r\n  .chatbot-header{\r\n\r\n    height:4vh;\r\n  \r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1.4vh;\r\n    font-weight: bold;\r\n  }\r\n \r\n  .header-content{\r\n    display: flex;\r\n    align-items: center;\r\n   \r\n  }\r\n \r\n  .bot-logo{\r\n    height: 40px;\r\n     width: 40px;\r\n    margin-right: 10px;\r\n    border-radius: 50% ;\r\n  }\r\n \r\n  .bot-name{\r\n    text-align: center;\r\n    margin-left: 60px;\r\n    font-family: sans-serif;\r\n    font-size: 16px;\r\n  }\r\n  .close-icon{\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    margin-right: 10px;\r\n    display: flex;\r\n  }\r\n \r\n  .App {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 39vh;\r\n    padding: 1vw;\r\n  }\r\n \r\n  .chat-container {\r\n    flex-grow: 1;\r\n    overflow: auto; /* Enable automatic scrolling */\r\n     height: 100px\r\n     \r\n  }\r\n\r\n  \r\n /* Hide the scrollbar track */\r\n .chat-container::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar width and color */\r\n.chat-container::-webkit-scrollbar {\r\n  width: 8px; /* Adjust as needed */\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar thumb appearance */\r\n.chat-container::-webkit-scrollbar-thumb {\r\n  background-color: transparent;\r\n  border-radius: 4px; /* Rounded corners */\r\n}\r\n/* Define scrollbar thumb on hover appearance */\r\n.chat-container::-webkit-scrollbar-thumb:hover {\r\n  background-color: rgba(0, 0, 0, 0.3); /* Adjust opacity as needed */\r\n}\r\n \r\n  .message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 5px;\r\n    align-items: baseline;\r\n \r\n  }\r\n \r\n  .bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n    /* border-radius: 50% ; */\r\n  }\r\n \r\n  .user-message {\r\n  \r\n    align-self: flex-end;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n \r\n  .bot-message {\r\n   \r\n  \r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n    word-wrap: break-word;\r\n    max-width: 360px;\r\n    white-space: pre-line;\r\n  }\r\n \r\n  .feedback-icon{\r\n    display: flex;\r\n    gap: 15px;\r\n  }\r\n  /* icon.css */\r\n  .thumbs-up-icon ,.thumbs-down-icon{\r\n   \r\n    transform: scale(1.1);\r\n    transition: transform 0.3s;\r\n  }\r\n \r\n  .default-icon {\r\n   \r\n    transform: scale(1);\r\n  }\r\n \r\n  .refined-query {\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    color: #888;\r\n    align-self: flex-end;\r\n  }\r\n \r\n  .input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 2vh;\r\n    height:2vh;\r\n    gap:5px;\r\n    border-top: 2px solid #ccc;\r\n  }\r\n \r\n  input[type=\"text\"] {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n \r\n  .user-icon {\r\n    margin: 2px 6px;\r\n    align-self: flex-end;\r\n   \r\n  }\r\n  .user-bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n  }\r\n  .empty-input {\r\n    border: 1px solid #e80c31;\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Additional style for the \"Enter Valid Query\" placeholder */\r\n  .empty-input::placeholder {\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Add this CSS in your stylesheets */\r\n  .chatbot-overlay {\r\n    position: fixed;\r\n    right: 3%;\r\n    bottom:  43%;\r\n    background-color: white;\r\n    z-index: 999;\r\n   \r\n  }\r\n \r\n  .send-icon{\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n \r\n  }\r\n}\r\n \r\n \r\n \r\n@media only screen and (min-width:601px){\r\n\r\n  .circular-icon {\r\n    border-radius: 50%;\r\n    padding: 10px; /* Adjust this value as needed for the desired size */\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .chat-icon {\r\n    position: fixed;\r\n    bottom: 2vh; /* Adjust this value to position it vertically */\r\n    right: 2vw; /* Adjust this value to position it horizontally */\r\n   /* Set height to 48px for the image */\r\n    border-radius: 50%; /* Make it circular */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    z-index: 999;\r\n  }\r\n \r\n   \r\n  .down-icon{\r\n    position: fixed;\r\n    height: 6%;\r\n    width: 3%;\r\n    background-color: #e80c31;\r\n    border-radius: 20px;\r\n \r\n    bottom: 2px;\r\n    color:white;\r\n    font-size:3vh;\r\n    right: 4%;\r\n \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n  }\r\n \r\n \r\n  .inner-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n    width: 416px;\r\n    height: 420px;\r\n    margin-left: 0;\r\n    margin-top: 0;\r\n \r\n    /* margin: 20px auto;  */\r\n  }\r\n \r\n  .chatbot-header{\r\n\r\n    height:7vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1.4vh;\r\n    font-weight: bold;\r\n    \r\n  }\r\n \r\n  .header-content{\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n  }\r\n \r\n  .bot-logo{\r\n    height: 40px;\r\n    width: 40px;\r\n    margin-right: 10px;\r\n    border-radius: 50% ;\r\n  }\r\n \r\n  .bot-name{\r\n    margin-left: 60px;\r\n    text-align: center;\r\n    font-family:sans-serif;\r\n    font-size: 16px;\r\n  }\r\n  .close-icon{\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    margin-right: 10px;\r\n    display: flex;\r\n  }\r\n \r\n  .App {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 73%;\r\n    padding: 1vw;\r\n  }\r\n \r\n  .chat-container {\r\n    flex-grow: 1;\r\n    overflow: auto; /* Enable automatic scrolling */\r\n    height: 100px\r\n  }\r\n  \r\n /* Hide the scrollbar track */\r\n .chat-container::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar width and color */\r\n.chat-container::-webkit-scrollbar {\r\n  width: 8px; /* Adjust as needed */\r\n  background-color: transparent;\r\n}\r\n/* Define scrollbar thumb appearance */\r\n.chat-container::-webkit-scrollbar-thumb {\r\n  background-color: transparent;\r\n  border-radius: 4px; /* Rounded corners */\r\n}\r\n/* Define scrollbar thumb on hover appearance */\r\n.chat-container::-webkit-scrollbar-thumb:hover {\r\n  background-color: rgba(0, 0, 0, 0.3); /* Adjust opacity as needed */\r\n}\r\n \r\n  .message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 5px;\r\n    align-items: baseline;\r\n  }\r\n \r\n  .bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n    /* border-radius: 50% ; */\r\n  }\r\n \r\n  .user-message {\r\n\r\n    align-self: flex-end;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n    font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n \r\n  .bot-message {\r\n   \r\n  display: flex;\r\n    padding: 8px;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n    word-wrap: break-word;\r\n    max-width: 360px;\r\n    white-space: pre-line;\r\n  }\r\n \r\n  .feedback-icon{\r\n    display: flex;\r\n    gap: 15px;\r\n  }\r\n  /* icon.css */\r\n  .thumbs-up-icon ,.thumbs-down-icon{\r\n    \r\n    transform: scale(1.1);\r\n    transition: transform 0.3s;\r\n  }\r\n \r\n  .default-icon {\r\n    \r\n    transform: scale(1);\r\n  }\r\n \r\n \r\n  .refined-query {\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    color: #888;\r\n    align-self: flex-end;\r\n  }\r\n \r\n  .input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 2vh;\r\n    height:5vh;\r\n    gap:5px;\r\n    border-top: 2px solid #ccc;\r\n  }\r\n\r\n \r\n  input[type=\"text\"] {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n      font-family: 'Roman';\r\n    font-size: 14px;\r\n  }\r\n   \r\n  .user-icon {\r\n    margin: 2px 6px;\r\n    align-self: flex-end;\r\n   \r\n  }\r\n  .user-bot-icon{\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius:50%;\r\n    object-fit:cover;\r\n  }\r\n  .empty-input {\r\n    border: 1px solid #e80c31;\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Additional style for the \"Enter Valid Query\" placeholder */\r\n  .empty-input::placeholder {\r\n    color: #e80c31;\r\n  }\r\n \r\n  /* Add this CSS in your stylesheets */\r\n  .chatbot-overlay {\r\n    position: fixed;\r\n    right: 4%;\r\n    bottom:  10%;\r\n    background-color: white;\r\n    z-index: 999;\r\n    \r\n   \r\n  }\r\n \r\n  .send-icon{\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  \r\n  }\r\n}\r\n \r\n\r\n\r\n\r\n\r\n@font-face {\r\n  font-family: \"body-xl\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 150%;\r\n  letter-spacing: 0;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-xl-emphasis\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.svg#FrutigerLTStd-Bold\") format('svg');\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 150%;\r\n  letter-spacing: 0;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-large\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 150%;\r\n  letter-spacing: -0.16px;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-large-emphasis\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.svg#FrutigerLTStd-Bold\") format('svg');\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 150%; \r\n  letter-spacing: -0.16px;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-medium\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 150%;\r\n  letter-spacing: -0.14px;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-medium-emphasis\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.svg#FrutigerLTStd-Bold\") format('svg');\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 150%;\r\n  letter-spacing: -0.14px;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-small\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 150%;\r\n  letter-spacing: 0;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-small-emphasis\";\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 150%;\r\n  letter-spacing: 0;\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.svg#FrutigerLTStd-Bold\") format('svg');\r\n}\r\n\r\n@font-face {\r\n  font-family: \"body-nlf\";\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 200%;\r\n  letter-spacing: -1%;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'FrutigerLTStd-Roman';\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Roman.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.woff2\") format('woff2'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Roman.svg#FrutigerLTStd-Roman\") format('svg');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'FrutigerLTStd-LightCn';\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-LightCn.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-LightCn.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-LightCn.svg#FrutigerLTStd-LightCn\") format('svg'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-LightCn.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-LightCn.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-LightCn.woff2\") format('woff2');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'FrutigerLTStd-Cn';\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Cn.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Cn.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Cn.svg#FrutigerLTStd-Cn\") format('svg'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Cn.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Cn.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Cn.woff2\") format('woff2');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'FrutigerLTStd-Bold';\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Bold.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.svg#FrutigerLTStd-Bold\") format('svg'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Bold.woff2\") format('woff2');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'FrutigerLTStd-Black';\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Black.eot\");\r\n  src: url(\"../../assets/fonts/FrutigerLTStd-Black.eot?#iefix\") format('embedded-opentype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Black.svg#FrutigerLTStd-Black\") format('svg'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Black.ttf\") format('truetype'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Black.woff\") format('woff'),\r\n       url(\"../../assets/fonts/FrutigerLTStd-Black.woff2\") format('woff2');\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, h, State, Element, Prop, Listen } from '@stencil/core';\r\nimport { Config } from '../../config';\r\n\r\n@Component({\r\n  tag: 'smart-assistant',\r\n  styleUrl: 'smart-assistant.css',\r\n  shadow: true,\r\n})\r\nexport class SmartAssistant {\r\n  @Prop({ reflect: true, mutable: true }) page: string = 'none';\r\n\r\n  @State() isChatbotVisible = false;\r\n  @State() query = '';\r\n  // @State() feedback = '';\r\n  @State() feedback: string[] = [];\r\n  @State() chatHistory = [];\r\n  @State() refinedQuery = '';\r\n  @State() refinedQueryHidden = true;\r\n  @State() isLoading = false;\r\n  @State() showEmptyQueryMessage = false;\r\n  @State() currentResponseIndex = -1;\r\n  @State() isProblem = false;\r\n  @State() selectedFeedback = [];\r\n  @State() feedbackSubmitted = [];\r\n  @State() errorMessage = '';\r\n  @State() session_id = null;\r\n  @State() starttime = null;\r\n  @State() showSource = true;\r\n  @State() sourceSet: Array<any> = [];\r\n  @State() currentQuestionIndex = -1;\r\n\r\n  @Element() element: HTMLElement;\r\n\r\n  @State() chat_secretkey: string;\r\n  @State() isOpen = false;\r\n\r\n  toggleChatbot() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  @Listen('document:keydown.escape')\r\n  handleEscape() {\r\n    this.isOpen = false;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    // Set initial value for chat_secretkey\r\n    this.chat_secretkey = Config.chatSecretKey;\r\n  }\r\n\r\n\r\n\r\n  scrollToBottom = () => {\r\n    const chatContainer = this.element.shadowRoot.querySelector('.chat-container');\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n  };\r\n\r\n\r\n  async getToken() {\r\n    try {\r\n      const response = await fetch(Config.tokenUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const token = data.token;\r\n        localStorage.setItem('Local_Session_Key', token);\r\n        this.session_id = data.session_id;\r\n        this.starttime = data.session_start_time;\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error(`Failed to fetch token: ${response.statusText}`, errorData);\r\n        if (response.status === 401) {\r\n          console.error('Unauthorized: You may not have the required permissions.');\r\n        } else if (response.status === 404) {\r\n          console.error('Resource not found: The endpoint does not exist.');\r\n        } else {\r\n          console.error('Unknown error occurred.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.name === 'AbortError') {\r\n        console.error('Request aborted: Timeout or user interruption.');\r\n      } else {\r\n        console.error('Network error:', error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRefreshSession = () => {\r\n    this.chatHistory = [];\r\n    this.query = '';\r\n    this.isChatbotVisible = !this.isChatbotVisible;\r\n  };\r\n\r\n  handleChatClick = () => {\r\n    this.getToken();\r\n    this.isChatbotVisible = !this.isChatbotVisible;\r\n  };\r\n\r\n  async handleQuerySubmit() {\r\n    try {\r\n      if (this.query.trim() === '') {\r\n        this.showEmptyQueryMessage = true;\r\n        return;\r\n      }\r\n      // Save the current query before sending the request\r\n      const currentQuery = this.query;\r\n      // Clear the query in the UI immediately after submitting\r\n      this.query = '';\r\n\r\n      this.errorMessage = null;\r\n      this.showEmptyQueryMessage = false;\r\n      const newChatHistory = [\r\n        ...this.chatHistory,\r\n        { user: currentQuery },\r\n      ];\r\n\r\n      this.chatHistory = newChatHistory;\r\n\r\n      this.isLoading = true;\r\n      this.currentResponseIndex = newChatHistory.length - 1;\r\n\r\n      this.page = location.href.split('/')[3]\r\n\r\n\r\n\r\n\r\n      const response = await fetch(Config.responseUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Authorization': `Bearer ${localStorage.getItem(\"Local_Session_Key\")}`,\r\n          'chatSecretKey': this.chat_secretkey\r\n\r\n        },\r\n        body: JSON.stringify({\r\n          query: currentQuery,\r\n          session_id: this.session_id,\r\n          session_start_time: this.starttime,\r\n          page: this.page,\r\n\r\n        })\r\n      });\r\n\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          this.isLoading = false;\r\n          this.errorMessage = 'Your session is timed out. Please close the chat and log in again.';\r\n          return;\r\n        }\r\n        const errorData = await response.json();\r\n        console.error('Failed to get a response:', errorData);\r\n        this.isLoading = false;\r\n        this.errorMessage = 'Failed to get a response. Please try again.';\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const originalResponse = data.response;\r\n      const containsBrackets = /\\(|\\)|\\[|\\]/.test(originalResponse);\r\n      let cleanedResponse = originalResponse;\r\n      if (containsBrackets) {\r\n        cleanedResponse = cleanedResponse.replace(/\\(|\\)/g, ' ').replace(/\\[|\\]/g, ' ');\r\n      }\r\n\r\n      // ... Logic for converting URLs to links\r\n      function convertUrlsToLinks(text) {\r\n        const urlRegex = /(https?:\\/\\/[^\\s)\\]\"\\,]+|www\\.[^\\s)\\]\"\\,]+)/g;\r\n\r\n        const parts = text.split(urlRegex);\r\n        return parts.map((part, index) => {\r\n          if (urlRegex.test(part)) {\r\n            if (part.startsWith('https://www.')) {\r\n              // Preserve URLs that start with \"https://www.\"\r\n              return (\r\n                <a key={index} href={part} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {part}\r\n                </a>\r\n              );\r\n            } else {\r\n              // Check if the URL starts with \"www.\" and add \"http://\" if it doesn't start with a protocol\r\n              if (/^www\\./.test(part)) {\r\n                part = `http://${part}`;\r\n              } else if (!part.startsWith('http://') && !part.startsWith('https://')) {\r\n                // If the URL doesn't start with a protocol, assume it's \"http://\"\r\n                part = `http://${part}`;\r\n              }\r\n\r\n              // Remove a trailing period (\".\") if present\r\n              part = part.replace(/\\.$/, '');\r\n\r\n              return (\r\n                <a key={index} href={part} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {part}\r\n                </a>\r\n              );\r\n            }\r\n          } else {\r\n            return part;\r\n          }\r\n        });\r\n      }\r\n\r\n      //const botResponse = convertUrlsToLinks(cleanedResponse);\r\n      const botResponse = originalResponse\r\n      newChatHistory[newChatHistory.length - 1].bot = botResponse;\r\n      newChatHistory[newChatHistory.length - 1].row_id = data.row_id;\r\n      this.chatHistory = newChatHistory;\r\n\r\n      this.isLoading = false;\r\n      this.isProblem = data.isProblem;\r\n      this.sourceSet = data.source_set;\r\n\r\n      if (data.refinedQuery) {\r\n        this.refinedQuery = data.refinedQuery;\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n      this.isLoading = false;\r\n      this.errorMessage = 'Network error. Please check your connection and try again.';\r\n    }\r\n    this.feedback = [];\r\n    this.feedbackSubmitted = [];\r\n    const lastIndex = this.chatHistory.length - 2;\r\n    console.log(\"last indexxx===\", lastIndex)\r\n\r\n\r\n    // Save feedback if available\r\n    if (this.selectedFeedback[lastIndex] !== null) {\r\n      this.saveFeedbackToDatabase(lastIndex, this.selectedFeedback[lastIndex]);\r\n    }\r\n\r\n  }\r\n  async saveFeedbackToDatabase(index: number, feedbackLabel: string) {\r\n    try {\r\n      const response = await fetch(Config.feedbackUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: JSON.stringify({\r\n          session_id: this.session_id,\r\n          question: this.chatHistory[index].user,\r\n          answer: this.chatHistory[index].bot,\r\n          feedback: feedbackLabel,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Feedback saved successfully');\r\n        const newFeedbackSubmitted = [...this.feedbackSubmitted];\r\n        newFeedbackSubmitted[index] = true;\r\n        this.feedbackSubmitted = newFeedbackSubmitted;\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('Failed to save feedback:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n    }\r\n  }\r\n\r\n  async handleFeedback(index, isPositive) {\r\n    try {\r\n      let feedbackLabel = '';\r\n\r\n      if (isPositive === true) {\r\n        this.chatHistory[index].isThumbsUpClicked = !this.chatHistory[index].isThumbsUpClicked;\r\n        if (this.chatHistory[index].isThumbsUpClicked) {\r\n          this.chatHistory[index].isThumbsDownClicked = false;\r\n        }\r\n        feedbackLabel = 'GOOD';\r\n      } else if (isPositive === false) {\r\n        this.chatHistory[index].isThumbsDownClicked = !this.chatHistory[index].isThumbsDownClicked;\r\n        if (this.chatHistory[index].isThumbsDownClicked) {\r\n          this.chatHistory[index].isThumbsUpClicked = false;\r\n        }\r\n        feedbackLabel = 'BAD';\r\n      } else {\r\n        feedbackLabel = 'NEUTRAL';\r\n      }\r\n\r\n      const newFeedback = [...this.feedback];\r\n      newFeedback[index] = feedbackLabel;\r\n      this.feedback = newFeedback;\r\n\r\n      // Keep track of selected feedback\r\n      const newSelectedFeedback = [...this.selectedFeedback];\r\n      newSelectedFeedback[index] = isPositive;\r\n      this.selectedFeedback = newSelectedFeedback;\r\n\r\n      // Make an API request to save feedback in the database\r\n      await this.saveFeedbackToDatabase(index, feedbackLabel);\r\n    } catch (error) {\r\n      console.error('An error occurred while handling feedback:', error);\r\n    }\r\n  }\r\n\r\n\r\n  handleBotMessageClick(botMessage) {\r\n    const copyEvent = new CustomEvent('copyBotMessage', { detail: botMessage });\r\n    this.element.dispatchEvent(copyEvent);\r\n  }\r\n\r\n\r\n  // handleDocumentPathClick = async (event, filePath) => {\r\n  //   event.preventDefault(); // Prevent default link behavior\r\n\r\n  //   try {\r\n\r\n  //     const folderPath = \"C:\\\\CISCO Fresh start\\\\Backends\\\\DEMO March 1\\\\Backend\\\\files\\\\cisco_samp_docx\\\\\";\r\n\r\n  //     // const fileName = \"example_file.txt\"\r\n  //     const file = filePath.split('\\\\').pop();\r\n  //     const fileExtension = filePath.split('.').pop()?.toLowerCase() || '';\r\n  //     console.log(fileExtension)\r\n  //     if (fileExtension === 'ppt' || fileExtension === 'pptx' || fileExtension === 'xls' || fileExtension === 'xlsx' || fileExtension === 'docx') {\r\n  //       // Construct the SharePoint URL based on the file name\r\n  //       console.log(\"inside if\")\r\n  //       const sharePointBaseUrl = 'https://cisco-my.sharepoint.com/:f:/r/personal/varshav_cisco_com/Documents/Shared_Cisco_Files/';\r\n\r\n  //       const sharePointURL = `${sharePointBaseUrl}/${file}`;\r\n  //       console.log(sharePointURL)\r\n  //       // Redirect the user to the SharePoint URL\r\n  //       window.open(sharePointURL, '_blank');\r\n  //     }\r\n  //     else {\r\n\r\n  //       const fullPath = folderPath.concat(filePath);\r\n  //       console.log(fullPath)\r\n  //       const response = await fetch(Config.getFileUrl, {\r\n  //         method: 'POST',\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //         },\r\n  //         body: JSON.stringify({\r\n  //           filePath: fullPath,\r\n  //           // Include any additional data you need to send to the backend\r\n  //         }),\r\n  //       });\r\n\r\n  //       if (response.ok) {\r\n  //         const fileBlob = await response.blob();\r\n  //         console.log(filePath)\r\n  //         const fileUrl = URL.createObjectURL(fileBlob);\r\n  //         window.open(fileUrl, '_blank');\r\n  //         // Handle success response from the backend\r\n  //       } else {\r\n  //         console.error('Error handling document path click');\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  //   catch (error) {\r\n  //     console.error('Error handling document path click:', error);\r\n  //     // Handle network errors or other exceptions\r\n  //   }\r\n  // };\r\n\r\n  toggleRefinedQueryVisibility = () => {\r\n    if (!this.refinedQueryHidden || this.refinedQuery !== 'Invalid input, try again') {\r\n      this.refinedQueryHidden = !this.refinedQueryHidden;\r\n    }\r\n  };\r\n\r\n  toggleShowSource = () => {\r\n    this.showSource = !this.showSource;\r\n  };\r\n\r\n\r\n  handleKeyPress = (event: KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      this.handleQuerySubmit();\r\n    }\r\n  };\r\n\r\n\r\n  // for autofocus in input text field and scroll to bottom\r\n\r\n  inputRef: HTMLInputElement;\r\n\r\n  componentDidUpdate() {\r\n    if (this.isChatbotVisible && this.inputRef) {\r\n      this.inputRef.focus();\r\n    }\r\n    this.scrollToBottom();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"body\">\r\n      {/* Render chat icon regardless of chatbot visibility */}\r\n      <div class=\"chat-icon\" onClick={!this.isChatbotVisible ? this.handleChatClick : undefined}>\r\n        <img style={{ width: '50px', height: '50px'}} src={Config.botLogo} alt=\"Chatbot Icon\" />\r\n      </div>\r\n\r\n\r\n        {this.isChatbotVisible && (\r\n          <div class=\"chatbot-overlay\">\r\n          <div class=\"inner-box\" style={{ backgroundColor: Config.innerBoxColor }}>\r\n            <div>\r\n              <div class=\"chatbot-header\" style={{ backgroundColor: Config.headerBgColor, color: Config.headerTextColor }}>\r\n                <div class=\"header-content\">\r\n                  {/* <img class=\"bot-logo\" src={Config.headerLogo} alt=\"Avatar\" /> */}\r\n\r\n                  <div class=\"bot-name\" style={{ marginLeft: '0px' }}>\r\n                    {Config.headerText}\r\n                  </div>\r\n                  <div class=\"close\" onClick={this.handleRefreshSession} style={{ marginLeft: '250px' }}>\r\n\r\n                    <i class=\"fas fa-times\" style={{ color: Config.closeIconColor }}></i>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div style={{ borderTop: '2px solid #ccc' }}></div>\r\n            </div>\r\n            <div class=\"App\">\r\n              <div class=\"chat-container\" >\r\n                <div class=\"message\" style={{ display: 'flex' }}>\r\n\r\n                  <div style={{ display: 'inline-block' }} >\r\n                    <img class=\"bot-icon\" src={Config.botLogo} alt=\"Logo\" />\r\n                  </div>\r\n                  <div class=\"bot-message\" style={{ backgroundColor: Config.botBgColor, color: Config.botTextColor }}>{Config.botText}</div>\r\n\r\n                </div>\r\n\r\n                {this.chatHistory.map((message, index) => (\r\n\r\n                  <div class=\"message\" key={index}>\r\n                    {message.user && (\r\n                      <div class=\"user-icon\" >\r\n                        {/* <i class={Config.userLogo}></i> */}\r\n                        <img class=\"user-bot-icon\" src={Config.userLogo} alt=\"Logo\" />\r\n                      </div>\r\n\r\n                    )}\r\n                    <div class={`user-message ${message.user ? 'user-message-align-end' : ''}`} style={{ backgroundColor: Config.userMsgBgColor, color: Config.userMsgColor }}>{message.user}</div>\r\n                    <div >\r\n\r\n                      <img class=\"bot-icon\" src={Config.botLogo} alt=\"Logo\" />\r\n                    </div>\r\n\r\n                    <div class=\"bot-message\" style={{ backgroundColor: Config.botBgColor, color: Config.botTextColor }}>\r\n\r\n                      {this.isLoading && index === this.chatHistory.length - 1 ? (\r\n                        <i class=\"fas fa-spinner fa-spin\"></i>\r\n                      ) : (<div>{this.errorMessage}</div>)}\r\n\r\n                      {message.bot}\r\n                      {/* {this.scrollToBottom()} */}\r\n\r\n\r\n                    </div>\r\n                    <div class=\"refined-query\">\r\n                      {index === this.chatHistory.length - 1 && message.bot && message.bot !== 'Invalid Input, Try Again.' && (\r\n                        <div>\r\n                          {Config.showRefinedQuery && (\r\n                            <div>\r\n                              {this.refinedQueryHidden ? (\r\n                                <i\r\n                                  class=\"far fa-eye\"\r\n                                  onClick={this.toggleRefinedQueryVisibility}\r\n                                  style={{ color: Config.refinedQueryColor }}></i>\r\n                              ) : (\r\n                                <i\r\n                                  class=\"far fa-eye-slash\"\r\n                                  onClick={this.toggleRefinedQueryVisibility}\r\n                                  style={{ color: Config.refinedQueryColor }}></i>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                          {Config.showSource && (\r\n                            <div>\r\n                              {this.showSource ? (\r\n                                <i\r\n                                  class=\"fas fa-link\"\r\n                                  onClick={this.toggleShowSource}\r\n                                  style={{ color: Config.sourceColor }} ></i>\r\n                              ) : (\r\n                                <i\r\n                                  class=\"far fa-eye-slash\"\r\n                                  onClick={this.toggleShowSource}\r\n                                  style={{ color: Config.sourceColor }}></i>\r\n                              )\r\n                              }\r\n                            </div>\r\n                          )}\r\n                          {!this.refinedQueryHidden && (\r\n                            <span class=\"hidden-query\" style={{ color: Config.refinedQueryColor }}>{this.refinedQuery}</span>\r\n                          )}\r\n                          <span class=\"hidden-query\">\r\n                            {!this.showSource && (\r\n                              this.sourceSet.map((path, index) => (\r\n                                <span key={index} style={{ color: Config.sourceColor }}>\r\n                                  <a href=\"#\" style={{ textDecoration: 'none', color: Config.sourceColor }}>{path}</a>\r\n                                  {index < this.sourceSet.length - 1 && ','}\r\n                                </span>\r\n                              ))\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div key={index}>\r\n                      {message.bot && !this.feedbackSubmitted[index] && index === this.chatHistory.length - 1 && (\r\n                        <div class=\"feedback-icon\">\r\n\r\n                          <div>\r\n                            {Config.showFeedback && (\r\n                              <span class=\"thumbs-up\" onClick={() => this.handleFeedback(index, true)} style={{ cursor: 'pointer', color: Config.feedbackColor }}>\r\n                                <i class={`fas fa-thumbs-up ${message.isThumbsUpClicked ? 'thumbs-up-icon' : 'default-icon'}`}></i>\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                          {Config.showFeedback && (\r\n                            <span class=\"thumbs-down\" onClick={() => this.handleFeedback(index, false)} style={{ cursor: 'pointer', color: Config.feedbackColor }}>\r\n                              <i class={`fas fa-thumbs-down ${message.isThumbsDownClicked ? 'thumbs-down-icon' : 'default-icon'}`}></i>\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                  </div>\r\n                ))}\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"input-container\" >\r\n              <input\r\n                ref={(el) => (this.inputRef = el as HTMLInputElement)}\r\n                type=\"text\"\r\n                onKeyPress={(event: KeyboardEvent) => this.handleKeyPress(event)}\r\n                value={this.query}\r\n                placeholder={this.showEmptyQueryMessage ? 'ENTER VALID QUERY!!!' : 'Type in here...'}\r\n                onInput={(event) => {\r\n                  this.query = (event.target as HTMLInputElement).value;\r\n                  this.showEmptyQueryMessage = false;\r\n                }}\r\n                class={this.showEmptyQueryMessage ? 'empty-input' : ''}\r\n                maxLength={200}\r\n              />\r\n\r\n              <span class=\"send-icon\" onClick={this.handleQuerySubmit.bind(this)} style={{ color: Config.sendSymbolColor }}>\r\n                <i class=\"fas fa-paper-plane circular-icon\" style={{ backgroundColor: Config.sendBgColor, borderRadius: '50%' }}></i>\r\n\r\n              </span>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\n"],"version":3}